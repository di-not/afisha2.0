import { PrismaClient } from "@prisma/client";
import { ObjectId } from "mongodb";

const prisma = new PrismaClient();

function generateObjectId() {
  return new ObjectId().toHexString();
}

async function findOrCreateTag(tagData: { name: string; color?: string; url?: string }) {
  let tag = await prisma.tag.findFirst({
    where: { name: tagData.name },
  });

  if (!tag) {
    tag = await prisma.tag.create({
      data: {
        id: generateObjectId(),
        name: tagData.name,
        color: tagData.color || "#E4E4E4",
        url: tagData.url,
      },
    });
  }

  return tag;
}

async function findOrCreatePlace(placeData: { name: string; url?: string }) {
  let place = await prisma.place.findFirst({
    where: { name: placeData.name },
  });

  if (!place) {
    place = await prisma.place.create({
      data: {
        id: generateObjectId(),
        name: placeData.name,
        url: placeData.url,
      },
    });
  }

  return place;
}

async function createRealEvents() {
  console.log("üå± –ù–∞—á–∞–ª–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...");

  await prisma.userDanceStyle.deleteMany();
  await prisma.userEvent.deleteMany();
  await prisma.userFavoriteEvent.deleteMany();
  await prisma.userBookmarkedEvent.deleteMany();
  await prisma.tag.deleteMany();
  await prisma.timestamp.deleteMany();
  await prisma.timetable.deleteMany();
  await prisma.document.deleteMany();
  await prisma.socials.deleteMany();
  await prisma.event.deleteMany();
  await prisma.tag.deleteMany();
  await prisma.place.deleteMany();
  await prisma.danceSchool.deleteMany();
  await prisma.danceStyle.deleteMany();
  await prisma.user.deleteMany();

  console.log("üóëÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –æ—á–∏—â–µ–Ω–∞");
  console.log("üíÉ –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∏–ª–µ–π —Ç–∞–Ω—Ü–µ–≤...");

  const danceStyles = await Promise.all([
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–¢–∞–Ω–≥–æ",
        description: "–ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ —Ç–∞–Ω–≥–æ",
      },
    }),
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–°–∞–ª—å—Å–∞",
        description: "–õ–∞—Ç–∏–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π —Ç–∞–Ω–µ—Ü",
      },
    }),
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–ë–∞—á–∞—Ç–∞",
        description: "–î–æ–º–∏–Ω–∏–∫–∞–Ω—Å–∫–∏–π —Ç–∞–Ω–µ—Ü",
      },
    }),
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–•–∏–ø-—Ö–æ–ø",
        description: "–£–ª–∏—á–Ω—ã–π —Ç–∞–Ω–µ—Ü",
      },
    }),
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–ö–æ–Ω—Ç–µ–º–ø–æ—Ä–∞—Ä–∏",
        description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç–∞–Ω–µ—Ü",
      },
    }),
    prisma.danceStyle.create({
      data: {
        id: generateObjectId(),
        name: "–ë–∞–ª—å–Ω—ã–µ —Ç–∞–Ω—Ü—ã",
        description: "–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏ –ª–∞—Ç–∏–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ",
      },
    }),
  ]);
  console.log("‚úÖ –°—Ç–∏–ª–∏ —Ç–∞–Ω—Ü–µ–≤ —Å–æ–∑–¥–∞–Ω—ã!");
  console.log("üé™ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π...");

  // –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–µ–≥–∏
  const tags = await Promise.all([
    findOrCreateTag({
      name: "18+",
      color: "#E4E4E4",
      url: "/FiltersSearch/?age=18",
    }),
    findOrCreateTag({
      name: "0+",
      color: "#E4E4E4",
      url: "/FiltersSearch/?age=0",
    }),
    findOrCreateTag({
      name: "–§–µ—Å—Ç–∏–≤–∞–ª—å",
      color: "#E4E4E4",
      url: "/FiltersSearch/?event_type=festival",
    }),
    findOrCreateTag({
      name: "–ú–∞—Å—Ç–µ—Ä-–ö–ª–∞—Å—Å",
      color: "#E4E4E4",
      url: "/FiltersSearch/?event_type=master-klass",
    }),
    findOrCreateTag({
      name: "–ö–æ–Ω–∫—É—Ä—Å",
      color: "#E4E4E4",
      url: "/FiltersSearch/?event_type=konkurs",
    }),
    findOrCreateTag({
      name: "–¢–∞–Ω–≥–æ",
      color: "#E4E4E4",
      url: "/tango/",
    }),
    findOrCreateTag({
      name: "–ë–∞—á–∞—Ç–∞",
      color: "#E4E4E4",
      url: "/bachata/",
    }),
    findOrCreateTag({
      name: "–ù–∞—Ä–æ–¥–Ω—ã–µ",
      color: "#E4E4E4",
      url: "/narodnye/",
    }),
    findOrCreateTag({
      name: "–¢–∞–Ω–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å",
      color: "#E4E4E4",
      url: "/FiltersSearch/?search=–¢–∞–Ω–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å",
    }),
    findOrCreateTag({
      name: "–ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ —Ç–∞–Ω–≥–æ",
      color: "#E4E4E4",
      url: "/FiltersSearch/?search=–ê—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–µ —Ç–∞–Ω–≥–æ",
    }),
    findOrCreateTag({
      name: "–ë–∞—á–∞—Ç–∞ —Å–µ–Ω—à–µ–ª",
      color: "#E4E4E4",
      url: "/bachata-senshel/",
    }),
  ]);

  // –°–æ–∑–¥–∞–µ–º –º–µ—Å—Ç–∞
  const places = await Promise.all([
    findOrCreatePlace({
      name: "–õ–µ–Ω–¥–æ–∫",
      url: "https://yandex.ru/maps/org/otkrytaya_kinostudiya_lendok/30884143329",
    }),
    findOrCreatePlace({
      name: "DL Hall",
      url: "https://yandex.ru/maps/org/dance_and_live/128982813941/",
    }),
    findOrCreatePlace({
      name: "–û–î–û –°–∞–º–∞—Ä–∞",
      url: "https://yandex.ru/maps/org/dom_ofitserov_samarskogo_garnizona_imeni_voroshilova/1242774233/",
    }),
    findOrCreatePlace({
      name: "–°—Ç—Ä—É–∫–æ–≤—Å–∫–∏–π —Å–∞–¥ –≤ –°–∞–º–∞—Ä–µ",
      url: "https://yandex.ru/maps/org/strukovskiy_sad/1071066941",
    }),
    findOrCreatePlace({
      name: "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–π —Ü–µ–Ω—Ç—Ä –†–∏—Ç–º",
      url: "https://yandex.ru/maps/org/ritm/123456789",
    }),
    findOrCreatePlace({
      name: "–ö—É–ª—å—Ç—É—Ä–Ω—ã–π —Ü–µ–Ω—Ç—Ä –ò—Å–∫—Ä–∞",
      url: "https://yandex.ru/maps/org/iskra/987654321",
    }),
  ]);

  // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
  const organizer = await prisma.user.create({
    data: {
      id: generateObjectId(),
      fullName: "–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä –§–µ—Å—Ç–∏–≤–∞–ª–µ–π",
      email: "organizer@example.com",
      password: "$2b$10$examplepasswordhash",
      role: "ORGANIZER",
      isOrganizer: true,
      organizationName: "–¢–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è –ê—Å—Å–æ—Ü–∏–∞—Ü–∏—è",
      organizationCity: "–°–∞–º–∞—Ä–∞",
      bdsId: "ORG001",
    },
  });

  // 1. Mucho Mas 2025 (–≥–ª–∞–≤–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ)
  const muchoMasEvent = await prisma.event.create({
    data: {
      id: generateObjectId(),
      title: "Mucho Mas 2025",
      description: "<p>–û—Ä–∫–µ—Å—Ç—Ä–æ–≤—ã–π –¢–∞–Ω–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å</p>",
      shortDescription: "–û—Ä–∫–µ—Å—Ç—Ä–æ–≤—ã–π –¢–∞–Ω–≥–æ —Ñ–µ—Å—Ç–∏–≤–∞–ª—å / —Å–µ–∑–æ–Ω 5",
      imageUrl: "/uploads/tango-event.jpg",
      startDate: new Date("2025-05-08T11:00:00"),
      endDate: new Date("2025-05-12T02:00:00"),
      minPrice: 2700,
      maxPrice: 33600,
      isOnline: false,
      isFree: false,
      isArchived: false,
      isConfirmed: true,
      placeId: places[0].id,
      organizerId: organizer.id,
      creatorId: organizer.id,
      danceStyleId: danceStyles[0].id,
    },
  });

  // –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥—Å–æ–±—ã—Ç–∏—è –¥–ª—è Mucho Mas 2025
  const subEvents = await Promise.all([
    // –ü–æ–¥—Å–æ–±—ã—Ç–∏–µ 1: –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ç–∞–Ω–≥–æ
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–º—É —Ç–∞–Ω–≥–æ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∞–º–∏",
        description: "<p>–£–≥–ª—É–±–ª–µ–Ω–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –ø–æ —Ç–µ—Ö–Ω–∏–∫–µ –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–æ–≥–æ —Ç–∞–Ω–≥–æ —Å –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –∏–∑ –ê—Ä–≥–µ–Ω—Ç–∏–Ω—ã. –ò–∑—É—á–µ–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∏–≥—É—Ä, –º—É–∑—ã–∫–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ –∏–º–ø—Ä–æ–≤–∏–∑–∞—Ü–∏–∏.</p>",
        shortDescription: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å –æ—Ç –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∏—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π",
        imageUrl: "/uploads/tango-masterclass.jpg",
        startDate: new Date("2025-05-08T14:00:00"),
        endDate: new Date("2025-05-08T16:00:00"),
        minPrice: 1500,
        maxPrice: 1500,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[0].id,
        parentEventId: muchoMasEvent.id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[0].id,
      },
    }),

    // –ü–æ–¥—Å–æ–±—ã—Ç–∏–µ 2: –ö–æ–Ω–∫—É—Ä—Å —Ç–∞–Ω–≥–æ
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–ö–æ–Ω–∫—É—Ä—Å –ø–∞—Ä–Ω–æ–≥–æ —Ç–∞–Ω–≥–æ '–ó–æ–ª–æ—Ç–æ–µ —Ç–∞–Ω–≥–æ'",
        description: "<p>–ï–∂–µ–≥–æ–¥–Ω—ã–π –∫–æ–Ω–∫—É—Ä—Å –ø–∞—Ä–Ω–æ–≥–æ —Ç–∞–Ω–≥–æ —Å –ø—Ä–∏–∑–æ–≤—ã–º —Ñ–æ–Ω–¥–æ–º 100,000 —Ä—É–±–ª–µ–π. –£—á–∞—Å—Ç–≤—É—é—Ç –ø–∞—Ä—ã —Å–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏. –ñ—é—Ä–∏ –∏–∑ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤.</p>",
        shortDescription: "–ö–æ–Ω–∫—É—Ä—Å —Å –ø—Ä–∏–∑–æ–≤—ã–º —Ñ–æ–Ω–¥–æ–º 100,000 —Ä—É–±–ª–µ–π",
        imageUrl: "/uploads/tango-competition.jpg",
        startDate: new Date("2025-05-09T18:00:00"),
        endDate: new Date("2025-05-09T22:00:00"),
        minPrice: 0,
        maxPrice: 0,
        isOnline: false,
        isFree: true,
        isArchived: false,
        isConfirmed: true,
        placeId: places[0].id,
        parentEventId: muchoMasEvent.id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[0].id,
      },
    }),

    // –ü–æ–¥—Å–æ–±—ã—Ç–∏–µ 3: –í–µ—á–µ—Ä–Ω—è—è –º–∏–ª–æ–Ω–≥–∞
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∞—è –º–∏–ª–æ–Ω–≥–∞ 'Noche de Tango'",
        description: "<p>–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∞—è –º–∏–ª–æ–Ω–≥–∞ —Å –∂–∏–≤–æ–π –º—É–∑—ã–∫–æ–π –æ—Ä–∫–µ—Å—Ç—Ä–∞ –∏ —É—é—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä–æ–π. DJ –Ω–∞–±–æ—Ä, –∂–∏–≤–æ–µ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏—Ö —Ç–∞–Ω–≥–æ.</p>",
        shortDescription: "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ä–≥–µ–Ω—Ç–∏–Ω—Å–∫–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞ —Å –∂–∏–≤–æ–π –º—É–∑—ã–∫–æ–π",
        imageUrl: "/uploads/milonga.jpg",
        startDate: new Date("2025-05-10T21:00:00"),
        endDate: new Date("2025-05-11T03:00:00"),
        minPrice: 800,
        maxPrice: 800,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[0].id,
        parentEventId: muchoMasEvent.id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[0].id,
      },
    }),

    // –ü–æ–¥—Å–æ–±—ã—Ç–∏–µ 4: –í–æ—Ä–∫—à–æ–ø –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–í–æ—Ä–∫—à–æ–ø '–¢–∞–Ω–≥–æ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö'",
        description: "<p>–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –≤–æ—Ä–∫—à–æ–ø –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç —Å–≤–æ–π –ø—É—Ç—å –≤ —Ç–∞–Ω–≥–æ. –û—Å–Ω–æ–≤—ã —à–∞–≥–∞, –æ–±—ä—è—Ç–∏—è –∏ –º—É–∑—ã–∫–∞–ª—å–Ω–æ—Å—Ç–∏.</p>",
        shortDescription: "–û—Å–Ω–æ–≤—ã —Ç–∞–Ω–≥–æ –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤",
        imageUrl: "/uploads/tango-beginners.jpg",
        startDate: new Date("2025-05-09T11:00:00"),
        endDate: new Date("2025-05-09T13:00:00"),
        minPrice: 1000,
        maxPrice: 1000,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[0].id,
        parentEventId: muchoMasEvent.id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[0].id,
      },
    }),

    // –ü–æ–¥—Å–æ–±—ã—Ç–∏–µ 5: –ì–∞–ª–∞-–∫–æ–Ω—Ü–µ—Ä—Ç
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–ì–∞–ª–∞-–∫–æ–Ω—Ü–µ—Ä—Ç –∑–≤—ë–∑–¥ —Ç–∞–Ω–≥–æ",
        description: "<p>–ó–∞–∫–ª—é—á–∏—Ç–µ–ª—å–Ω—ã–π –≥–∞–ª–∞-–∫–æ–Ω—Ü–µ—Ä—Ç —Å —É—á–∞—Å—Ç–∏–µ–º –ª—É—á—à–∏—Ö –ø–∞—Ä —Ñ–µ—Å—Ç–∏–≤–∞–ª—è. –®–æ—É-–ø—Ä–æ–≥—Ä–∞–º–º–∞ –∏ –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π.</p>",
        shortDescription: "–ì–∞–ª–∞-–∫–æ–Ω—Ü–µ—Ä—Ç –∏ —Ü–µ—Ä–µ–º–æ–Ω–∏—è –Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏—è",
        imageUrl: "/uploads/tango-gala.jpg",
        startDate: new Date("2025-05-11T20:00:00"),
        endDate: new Date("2025-05-11T23:00:00"),
        minPrice: 1200,
        maxPrice: 1200,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[0].id,
        parentEventId: muchoMasEvent.id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[0].id,
      },
    }),
  ]);

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç—ç–≥–∏ –¥–ª—è Mucho Mas
  await prisma.tag.createMany({
    data: [
      {
        id: generateObjectId(),
        name: "–§–µ—Å—Ç–∏–≤–∞–ª—å",
        color: "#FF6B6B",
        url: "/FiltersSearch/?event_type=festival",
        eventId: muchoMasEvent.id,
      },
      {
        id: generateObjectId(),
        name: "–¢–∞–Ω–≥–æ",
        color: "#4ECDC4",
        url: "/tango/",
        eventId: muchoMasEvent.id,
      },
      {
        id: generateObjectId(),
        name: "18+",
        color: "#45B7D1",
        url: "/FiltersSearch/?age=18",
        eventId: muchoMasEvent.id,
      },
    ],
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —Ç—ç–≥–∏ –¥–ª—è –ø–æ–¥—Å–æ–±—ã—Ç–∏–π
  await prisma.tag.createMany({
    data: [
      {
        id: generateObjectId(),
        name: "–ú–∞—Å—Ç–µ—Ä-–ö–ª–∞—Å—Å",
        color: "#F9A826",
        url: "/FiltersSearch/?event_type=master-klass",
        eventId: subEvents[0].id,
      },
      {
        id: generateObjectId(),
        name: "–ö–æ–Ω–∫—É—Ä—Å",
        color: "#6A0DAD",
        url: "/FiltersSearch/?event_type=konkurs",
        eventId: subEvents[1].id,
      },
      {
        id: generateObjectId(),
        name: "–í–µ—á–µ—Ä–∏–Ω–∫–∞",
        color: "#E84855",
        url: "/FiltersSearch/?event_type=party",
        eventId: subEvents[2].id,
      },
    ],
  });

  // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏ –¥–ª—è Mucho Mas
  await prisma.socials.create({
    data: {
      id: generateObjectId(),
      vk: "https://vk.com/muchomas",
      instagram: "https://www.instagram.com/russiantangoclub/",
      telegram: "https://t.me/Sokhnenko",
      youtube: "https://www.youtube.com/channel/UChTpvMLF1TwX6iNIO7RMuVg/featured",
      eventId: muchoMasEvent.id,
    },
  });

  // 2. –ë–∞—á–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å —Å –î–º–∏—Ç—Ä–∏–π –í–∞–≥–∏—Å
  const bachataEvent = await prisma.event.create({
    data: {
      id: generateObjectId(),
      title: "–ë–∞—á–∞—Ç–∞ –º–∞—Å—Ç–µ—Ä –∫–ª–∞—Å—Å —Å –î–º–∏—Ç—Ä–∏–π –í–∞–≥–∏—Å",
      description:
        "<p>–î–º–∏—Ç—Ä–∏–π –í–∞–≥–∏–Ω - –≥–ª–∞–≤–Ω—ã–π –ø–æ –ë–∞—á–∞—Ç–µ –≤ –°–ù–ì. –ó–∞ 10 –ª–µ—Ç –æ–±—É—á–∏–ª –±–æ–ª–µ–µ 25000 —á–µ–ª–æ–≤–µ–∫. –ü—Ä–æ–≤–æ–¥–∏–ª —Å–≤–æ–∏ –∫–ª–∞—Å—Å—ã –≤ 21–π —Å—Ç—Ä–∞–Ω–µ –∏ 70–∏ –≥–æ—Ä–æ–¥–∞—Ö –º–∏—Ä–∞.</p>",
      shortDescription: "–î–º–∏—Ç—Ä–∏–π –í–∞–≥–∏—Å –≤ –°–∞–º–∞—Ä–µ - –ë–∞—á–∞—Ç–∞ –ò–Ω—Ç–µ–Ω—Å–∏–≤",
      imageUrl: "/uploads/bachata-event.jpg",
      startDate: new Date("2024-10-26T08:00:00"),
      endDate: new Date("2024-10-26T18:00:00"),
      minPrice: 0,
      maxPrice: 0,
      isOnline: false,
      isFree: true,
      isArchived: false,
      isConfirmed: true,
      placeId: places[1].id,
      organizerId: organizer.id,
      creatorId: organizer.id,
      danceStyleId: danceStyles[2].id,
    },
  });

  // 3. –ö–æ–Ω–∫—É—Ä—Å–Ω—ã–π —Ç—É—Ä "–°–∞–º–∞—Ä—Å–∫–∞—è —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ ¬´PRO–¥–≤–∏–∂–µ–Ω–∏–µ¬ª"
  const konkursEvent = await prisma.event.create({
    data: {
      id: generateObjectId(),
      title: '–ö–æ–Ω–∫—É—Ä—Å–Ω—ã–π —Ç—É—Ä "–°–∞–º–∞—Ä—Å–∫–∞—è —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ ¬´PRO–¥–≤–∏–∂–µ–Ω–∏–µ¬ª"',
      description: "<p>–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∏–π –∫–æ–Ω–∫—É—Ä—Å-—Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞.</p>",
      shortDescription: "–û—á–Ω—ã–π —ç—Ç–∞–ø –∫–æ–Ω–∫—É—Ä—Å–∞-—Ñ–µ—Å—Ç–∏–≤–∞–ª—è",
      imageUrl: "/uploads/competition-event.jpg",
      startDate: new Date("2024-08-17T14:00:00"),
      endDate: new Date("2024-08-17T21:30:00"),
      minPrice: 0,
      maxPrice: 0,
      isOnline: false,
      isFree: true,
      isArchived: false,
      isConfirmed: true,
      placeId: places[2].id,
      organizerId: organizer.id,
      creatorId: organizer.id,
      danceStyleId: danceStyles[5].id,
    },
  });

  // 4. –°–∞–º–∞—Ä—Å–∫–∞—è —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ "PRO–¥–≤–∏–∂–µ–Ω–∏–µ"
  const samaraEvent = await prisma.event.create({
    data: {
      id: generateObjectId(),
      title: '–°–∞–º–∞—Ä—Å–∫–∞—è —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–∞—è —è—Ä–º–∞—Ä–∫–∞ "PRO–¥–≤–∏–∂–µ–Ω–∏–µ"',
      description: "<p>–í—Å–µ—Ä–æ—Å—Å–∏–π—Å–∫–∏–π –∫–æ–Ω–∫—É—Ä—Å-—Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Å –ø—Ä–∏–∑–æ–≤—ã–º —Ñ–æ–Ω–¥–æ–º 200 000 —Ä—É–±–ª–µ–π.</p>",
      shortDescription: "–ö–æ–Ω–∫—É—Ä—Å-—Ñ–µ—Å—Ç–∏–≤–∞–ª—å —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω–æ–≥–æ –∏—Å–∫—É—Å—Å—Ç–≤–∞",
      imageUrl: "/uploads/festival-event.jpg",
      startDate: new Date("2024-08-17T14:00:00"),
      endDate: new Date("2024-08-18T21:30:00"),
      minPrice: 0,
      maxPrice: 0,
      isOnline: false,
      isFree: true,
      isArchived: false,
      isConfirmed: true,
      placeId: places[3].id,
      organizerId: organizer.id,
      creatorId: organizer.id,
      danceStyleId: danceStyles[5].id,
    },
  });

  // 5. –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è
  const additionalEvents = await Promise.all([
    // –•–∏–ø-—Ö–æ–ø –±–∞—Ç—Ç–ª
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–•–∏–ø-—Ö–æ–ø –±–∞—Ç—Ç–ª Street Style",
        description: "<p>–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π —Ö–∏–ø-—Ö–æ–ø –±–∞—Ç—Ç–ª –¥–ª—è —Ç–∞–Ω—Ü–æ—Ä–æ–≤ –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π.</p>",
        shortDescription: "–£–ª–∏—á–Ω—ã–µ —Ç–∞–Ω—Ü–µ–≤–∞–ª—å–Ω—ã–µ –±–∞—Ç—Ç–ª—ã",
        imageUrl: "/uploads/hiphop-event.jpg",
        startDate: new Date("2024-11-15T19:00:00"),
        endDate: new Date("2024-11-15T23:00:00"),
        minPrice: 500,
        maxPrice: 500,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[4].id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[3].id,
      },
    }),

    // –°–∞–ª—å—Å–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∞
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "Salsa Night - –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –≤–µ—á–µ—Ä–∏–Ω–∫–∞",
        description: "<p>–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è —Å–∞–ª—å—Å–∞ –≤–µ—á–µ—Ä–∏–Ω–∫–∞ —Å —É—Ä–æ–∫–∞–º–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö.</p>",
        shortDescription: "–õ–∞—Ç–∏–Ω–æ–∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–µ —Ä–∏—Ç–º—ã",
        imageUrl: "/uploads/salsa-event.jpg",
        startDate: new Date("2024-11-20T20:00:00"),
        endDate: new Date("2024-11-21T02:00:00"),
        minPrice: 700,
        maxPrice: 700,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[5].id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[1].id,
      },
    }),

    // –ö–æ–Ω—Ç–µ–º–ø–æ—Ä–∞—Ä–∏ –≤–æ—Ä–∫—à–æ–ø
    prisma.event.create({
      data: {
        id: generateObjectId(),
        title: "–ö–æ–Ω—Ç–µ–º–ø–æ—Ä–∞—Ä–∏ –≤–æ—Ä–∫—à–æ–ø —Å –∏–∑–≤–µ—Å—Ç–Ω—ã–º–∏ —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∞–º–∏",
        description: "<p>–ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –≤–æ—Ä–∫—à–æ–ø –ø–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º—É —Ç–∞–Ω—Ü—É.</p>",
        shortDescription: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ö–æ—Ä–µ–æ–≥—Ä–∞—Ñ–∏—è",
        imageUrl: "/uploads/contemporary-event.jpg",
        startDate: new Date("2024-12-05T11:00:00"),
        endDate: new Date("2024-12-05T17:00:00"),
        minPrice: 2000,
        maxPrice: 2000,
        isOnline: false,
        isFree: false,
        isArchived: false,
        isConfirmed: true,
        placeId: places[4].id,
        organizerId: organizer.id,
        creatorId: organizer.id,
        danceStyleId: danceStyles[4].id,
      },
    }),
  ]);

  console.log("‚úÖ –°—Ç–∏–ª–∏ —Ç–∞–Ω—Ü–µ–≤ —Å–æ–∑–¥–∞–Ω—ã!");
  console.log("‚úÖ –†–µ–∞–ª—å–Ω—ã–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è —Å–æ–∑–¥–∞–Ω—ã!");
  console.log("‚úÖ –ü–æ–¥—Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω—ã!");
  console.log("‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è —Å–æ–∑–¥–∞–Ω—ã!");
}

createRealEvents()
  .catch(console.error)
  .finally(() => prisma.$disconnect());
